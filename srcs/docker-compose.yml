# 도커 컴포즈를 사용하는 이유?
# 간단하게 누군가가 잘 만들어 준 이미지들을 조합해서 서버를 간단하게 구축할 수 있다
# 설정까지 이미지에서 다 할 수 있다

# pid 1은 모든 프로세스의 부모 프로세스, 가장 첫번째로 실행되는 프로세스 (평가지에 있음)
# 따라서 pid 1을 종료하면 하위에 있는 모든 프로세스가 같이 종료된다는 뜻
# 만약 어떤 프로세스가 pid 1 하위 프로세스로 들어가있지 않으면, 마지막에 pid 1 프로세스가 종료되어도 좀비 프로세스로 남는다
# https://cloud.google.com/architecture/best-practices-for-building-containers?hl=ko#problem_1_how_the_linux_kernel_handles_signals
# 도커파일에서 CMD, ENTRYPOINT로 등록한 명령어는 PID 1번 프로세스로 실행된다
# 리눅스 커널에서의 최상위 프로세스 (PID 1) 는 하위 프로세스에서 발생하는 시그널을 처리할 줄 알지만,
# 도커에서 PID 1로 실행되는 프로세스는 이러한 능력이 없어 하위 프로세스가 비정상 종료되어도 상위 프로세스는 정상 종료된 것으로 인식한다
# 따라서 Dumb-init 등을 이용하여 시그널을 처리해주기도 한다

version: "3.0"

services:
  # 서비스의 이름
  nginx:
    build:
      context: ./requirements/nginx # 이 서비스를 빌드하기 위한 설정 파일 (Dockerfile) 의 위치
      dockerfile: ./Dockerfile # 이 서비스를 빌드하기 위한 설정 파일 (Dockerfile)
    image: nginx
    restart: always # 컨테이너 오류로 종료 시 재시작
    ports: # 왼쪽이 host, 오른쪽이 guest, 두 개를 연결해줌 (포트포워딩)
      - "443:443" # HTTPS 전용 포트가 443 포트이다
      # ports는 바깥에서도 접근이 가능함
    volumes:
      - wordpress-volume:/var/www/html/wordpress # wordpress를 가져다 쓰기 위함
    depends_on:
      - wordpress # wordpress 컨테이너 생성 후에 동작시키라는 뜻
    env_file:
      - .env # 환경변수 들어있는 파일
    networks:
      - inception-network # 네트워크 이름 -> 하나의 네트워크에 세 컨테이너가 모두 접속
  wordpress:
    build:
      context: ./requirements/wordpress
      dockerfile: ./Dockerfile
    image: wordpress
    restart: always
    expose:
      - "9000" # 네트워크 내부에서의 접근 포트
      # expose 는 해당 네트워크 내의 서비스들끼리만 연결 가능
      # 네트워크 설정이 필요함
    volumes:
      - wordpress-volume:/var/www/html/wordpress # wordpress 설치되는 위치를 볼륨으로 설정 (데이터 유지 위함)
    depends_on:
      - mariadb
    env_file:
      - .env
    networks:
      - inception-network
  mariadb:
    build:
      context: ./requirements/mariadb
      dockerfile: ./Dockerfile
    image: mariadb
    restart: always
    expose:
      - "3306"
    volumes:
      - database-volume:/var/lib/mysql/ # mysql 설치되는 위치를 볼륨으로 설정 (데이터 유지 위함)
    env_file:
      - .env
    networks:
      - inception-network

networks:
  # 네트워크 설정
  inception-network: # 서버에 네트워크는 단 하나
    driver: bridge # driver는 host, none, bridge 중 하나, default 는 bridge

volumes:
  # 볼륨 설정
  wordpress-volume: # 워드프레스 볼륨
    driver: local
    driver_opts:
      type: none
      device: /home/jiychoi/data/wordpress # 호스트 환경 내에서의 경로
      o: bind # docker-compose가 볼륨 위치 알 수 있도록 바인딩
  database-volume: # 데이터베이스 볼륨
    driver: local
    driver_opts:
      type: none
      device: /home/jiychoi/data/mariadb
      o: bind
